{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/Label.js","components/GenericMoreButton.js","components/StackAvatars.js","views/klabs/DashboardView/Header.js","views/klabs/DashboardView/LatestProjects.js","views/klabs/DashboardView/NewProjects.js","views/klabs/DashboardView/PerformanceOverTime/Chart.js","views/klabs/DashboardView/PerformanceOverTime/index.js","views/klabs/DashboardView/RealTime/Chart.js","views/klabs/DashboardView/RealTime/index.js","views/klabs/DashboardView/RoiPerCustomer.js","views/klabs/DashboardView/SystemHealth.js","views/klabs/DashboardView/TeamTasks/TaskItem.js","views/klabs/DashboardView/TeamTasks/index.js","views/klabs/DashboardView/TodaysMoney.js","services/restApiService.js","hooks/useHardware.js","views/klabs/DashboardView/HardwareStatus.js","views/klabs/DashboardView/RealtimeReadings/BarChart.js","views/klabs/DashboardView/RealtimeReadings/MultiLineChart.js","views/klabs/DashboardView/RealtimeReadings/RealtimeReadingsMoreButton.js","hooks/useInterval.js","views/klabs/DashboardView/RealtimeReadings/DataTable.js","views/klabs/DashboardView/RealtimeReadings/index.js","views/klabs/DashboardView/VoltageControl/VoltageControl.js","views/klabs/DashboardView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","paddingLeft","avatar","border","background","default","marginLeft","zIndex","more","colors","red","common","white","StackAvatars","avatars","limit","lastIndex","avatarNodes","item","key","src","length","push","variant","timeRanges","value","text","actionIcon","marginRight","Header","Grid","container","justify","Typography","technology","navigateNextIcon","label","contrastText","NewProjects","position","chart","PerformanceOverTime","marginTop","progress","margin","SystemHealth","viewButton","TodaysMoney","GET","url","a","request","get","then","resp","body","POST","json","post","send","getStatus","PI_URL","connect","disconnect","setVoltage","voltage","channel","tolerance","getVoltage","getAllVoltages","voltageOnly","results","useHardware","status","setStatus","API","s","isConnected","bavatar","HardwareStatus","Card","Box","component","gutterBottom","flexWrap","Button","Avatar","BarChart","dataProp","data","labels","data2","useTheme","datasets","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","console","log","options","scales","xAxes","ticks","min","max","stepSize","legend","MultiLineChart","v0points","reading","v1points","v2points","x","idx","yAxes","RTRMoreButton","onChartToggle","chartChoiceLabel","onSave","onStart","onStop","isSampling","Tooltip","IconButton","Menu","MenuItem","ListItemIcon","ListItemText","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","DataTable","voltageHistory","TableContainer","Paper","Table","aria-label","TableHead","TableRow","align","TableBody","scope","RealtimeReadings","voltageLevels","setVoltageLevels","setV0","setVoltageHistory","setIsSampling","chartType","setChartType","vs","catch","e","message","CardHeader","action","fileDownload","JSON","stringify","Divider","CardContent","Chip","marginBottom","toFixed","VoltageControl","handleSetVoltage","ev","volts","api","res","Slider","defaultValue","step","marks","valueLabelDisplay","onChangeCommitted","dark","minHeight","paddingTop","paddingBottom","SHOW_TEST_BORDERS","undefined","breakpoints","up","paddingRight","DashboardView","Page","Container","lg","sm","xs","xl"],"mappings":"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","file":"static/js/33.64737876.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        {/*<Breadcrumbs*/}\n        {/*  separator={<NavigateNextIcon fontSize=\"small\" />}*/}\n        {/*  aria-label=\"breadcrumb\"*/}\n        {/*>*/}\n        {/*  <Link*/}\n        {/*    variant=\"body1\"*/}\n        {/*    color=\"inherit\"*/}\n        {/*    to=\"/app\"*/}\n        {/*    component={RouterLink}*/}\n        {/*  >*/}\n        {/*    Dashboard*/}\n        {/*  </Link>*/}\n        {/*</Breadcrumbs>*/}\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Dashboard\n        </Typography>\n      </Grid>\n      {/*<Grid item>*/}\n      {/*  <Button*/}\n      {/*    ref={actionRef}*/}\n      {/*    onClick={() => setMenuOpen(true)}*/}\n      {/*  >*/}\n      {/*    <SvgIcon*/}\n      {/*      fontSize=\"small\"*/}\n      {/*      className={classes.actionIcon}*/}\n      {/*    >*/}\n      {/*      <CalendarIcon />*/}\n      {/*    </SvgIcon>*/}\n      {/*    {timeRange}*/}\n      {/*  </Button>*/}\n      {/*  <Menu*/}\n      {/*    anchorEl={actionRef.current}*/}\n      {/*    onClose={() => setMenuOpen(false)}*/}\n      {/*    open={isMenuOpen}*/}\n      {/*    PaperProps={{ className: classes.menu }}*/}\n      {/*    getContentAnchorEl={null}*/}\n      {/*    anchorOrigin={{*/}\n      {/*      vertical: 'bottom',*/}\n      {/*      horizontal: 'center'*/}\n      {/*    }}*/}\n      {/*    transformOrigin={{*/}\n      {/*      vertical: 'top',*/}\n      {/*      horizontal: 'center'*/}\n      {/*    }}*/}\n      {/*  >*/}\n      {/*    {timeRanges.map((t) => (*/}\n      {/*      <MenuItem*/}\n      {/*        key={t.value}*/}\n      {/*        onClick={() => setTimeRange(t.text)}*/}\n      {/*      >*/}\n      {/*        {t.text}*/}\n      {/*      </MenuItem>*/}\n      {/*    ))}*/}\n      {/*  </Menu>*/}\n      {/*</Grid>*/}\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst technologyMap = {\n  'html-css': '/static/images/technologies/html.svg',\n  'react-js': '/static/images/technologies/react-js.svg',\n  'vue-js': '/static/images/technologies/vue-js.svg',\n  angular: '/static/images/technologies/angular.svg',\n  figma: '/static/images/technologies/figma.svg',\n  sketch: '/static/images/technologies/sketch.svg'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/reports/latest-projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Projects\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Project Name\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Owner\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  Technology\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project) => (\n                <TableRow\n                  hover\n                  key={project.id}\n                >\n                  <TableCell>\n                    {project.title}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <Avatar\n                        alt=\"Author\"\n                        className={classes.avatar}\n                        src={project.author.avatar}\n                      >\n                        {getInitials(project.author.name)}\n                      </Avatar>\n                      <Box ml={1}>\n                        {project.author.name}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {project.currency}\n                    {project.price}\n                  </TableCell>\n                  <TableCell>\n                    {project.technologies.map((technology) => (\n                      <img\n                        alt=\"Tech\"\n                        key={technology}\n                        className={classes.technology}\n                        src={technologyMap[technology]}\n                      />\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nfunction NewProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New projects\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: theme.palette.background.default,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Line\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: '100%'\n  }\n}));\n\nfunction PerformanceOverTime({ className, ...rest }) {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box\n            height={375}\n            minWidth={500}\n          >\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n}\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PerformanceOverTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.9,\n        categoryPercentage: 1\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: false,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        legend: () => {},\n        title: () => {},\n        label: (tooltipItem) => {\n          const label = `Views: ${tooltipItem.yLabel}`;\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  current: {\n    marginTop: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5)\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction getRandomInt(min, max) {\n  // eslint-disable-next-line no-param-reassign\n  min = Math.ceil(min);\n  // eslint-disable-next-line no-param-reassign\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction RealTime({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [data, setData] = useState([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172\n  ]);\n\n  const getData = useCallback(() => {\n    if (isMountedRef.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (isMountedRef.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: '/app/projects',\n      views: '24'\n    },\n    {\n      pathname: '/app/chat',\n      views: '21'\n    },\n    {\n      pathname: '/cart',\n      views: '15'\n    },\n    {\n      pathname: '/cart/checkout',\n      views: '8'\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Typography\n            color=\"inherit\"\n            variant=\"h3\"\n          >\n            {\n              data[data.length - 1] === 0\n                ? data[data.length - 2]\n                : data[data.length - 1]\n            }\n          </Typography>\n        )}\n        classes={{ action: classes.current }}\n        subheader=\"Page views per second\"\n        subheaderTypographyProps={{ color: 'textSecondary', variant: 'body2' }}\n        title=\"Active users\"\n        titleTypographyProps={{ color: 'textPrimary' }}\n      />\n      <Chart\n        data={data}\n        labels={labels}\n      />\n      <List>\n        {pages.map((page) => (\n          <ListItem\n            classes={{ divider: classes.itemDivider }}\n            divider\n            key={page.pathname}\n          >\n            <ListItemText\n              primary={page.pathname}\n              primaryTypographyProps={{ color: 'textSecondary', variant: 'body2' }}\n            />\n            <Typography color=\"inherit\">\n              {page.views}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nRealTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RealTime;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nfunction RoiPerCustomer({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: '$'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per customer\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            color=\"inherit\"\n            variant=\"h3\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar\n        className={classes.avatar}\n        color=\"inherit\"\n      >\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  }\n}));\n\nfunction SystemHealth({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: 97\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        System Health\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {data.value}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={data.value}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n}\n\nSystemHealth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SystemHealth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  ListItem,\n  ListItemText,\n  IconButton,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport StackAvatars from 'src/components/StackAvatars';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction TaskItem({ task, className, ...rest }) {\n  const classes = useStyles();\n\n  let deadline = 'N/A';\n  let critical = false;\n\n  if (task.deadline) {\n    const now = moment();\n    const deadlineMoment = moment(task.deadline);\n\n    if (deadlineMoment.isAfter(now) && deadlineMoment.diff(now, 'day') < 3) {\n      deadline = `${deadlineMoment.diff(now, 'day')} days remaining`;\n      critical = true;\n    }\n  }\n\n  return (\n    <ListItem\n      className={clsx(\n        classes.root,\n        { [classes.critical]: critical },\n        className\n      )}\n      {...rest}\n    >\n      <ListItemText\n        className={classes.listItemText}\n        primary={task.title}\n        primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n        secondary={deadline}\n      />\n      <StackAvatars\n        avatars={task.members}\n        limit={3}\n      />\n      <Tooltip title=\"View task\">\n        <IconButton\n          className={classes.viewButton}\n          edge=\"end\"\n        >\n          <OpenInNewIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n}\n\nTaskItem.propTypes = {\n  className: PropTypes.string,\n  task: PropTypes.object.isRequired\n};\n\nexport default TaskItem;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TaskItem from './TaskItem';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction TeamTasks({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [tasks, setTasks] = useState(null);\n\n  const getTasks = useCallback(() => {\n    axios\n      .get('/api/reports/tasks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setTasks(response.data.tasks);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTasks();\n  }, [getTasks]);\n\n  if (!tasks) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={400}>\n          <List>\n            {tasks.map((task, i) => (\n              <TaskItem\n                divider={i < tasks.length - 1}\n                key={task.id}\n                task={task}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nfunction TodaysMoney({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: '24,000',\n    currency: '$',\n    difference: 4\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","/** *******************************\n\n File:       restApiService.js\n Function:   Interface to Flask server on Pi\n Copyright:  Bertco LLC\n Date:       2020-06-20\n Author:     mkahn\n\n ********************************* */\n\nimport request from 'superagent';\nimport {PI_URL} from '../config';\n\nconst delay = delayMs => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve();\n\t\t}, delayMs)\n\t})\n};\n\nexport const GET = async (url) => request.get(url).then((resp) => resp.body);\nexport const POST = async (url, json) => request.post(url).send(json).then((resp) => resp.body);\nexport const PUT = async (url, json) => request.put(url).send(json).then((resp) => resp.body);\nexport const PATCH = async (url, json) => request.patch(url).send(json).then((resp) => resp.body);\nexport const DELETE = (url) => request.delete(url).then((resp) => resp.body);\n\nconst getStatus = async () => GET(`${PI_URL}/status`);\nconst connect = async () => POST(`${PI_URL}/connect`);\nconst disconnect = async () => POST(`${PI_URL}/disconnect`);\nconst setVoltage = async ({voltage, channel, tolerance = 0.01}) => POST(`${PI_URL}/setv/${channel}/${voltage}/${tolerance}`);\nconst getVoltage = async (channel) => GET(`${PI_URL}/getv/${channel}`);\nconst getAllVoltages = async (voltageOnly = true) => {\n\tconst results = await GET(`${PI_URL}/getv/all`);\n\treturn voltageOnly ? results.map(v => v.voltage) : results;\n};\n\nexport default {\n\tgetStatus,\n\tconnect,\n\tdisconnect,\n\tsetVoltage,\n\tgetVoltage,\n\tgetAllVoltages\n};\n","/*********************************\n\n File:       useHardware.js\n Function:   Yep, that's it man\n Copyright:  Bertco LLC\n Date:       2020-06-20\n Author:     mkahn\n\n **********************************/\n\n// eslint-disable-next-line no-unused-vars\nimport React, {useState, useEffect} from 'react';\nimport API from '../services/restApiService';\n\nconst useHardware = () => {\n\n\tconst [status, setStatus] = useState('offline');\n\n\tuseEffect(() => {\n\t\tasync function getStatus() {\n\t\t\tconst s = await API.getStatus();\n\t\t\tsetStatus(s.status);\n\t\t}\n\n\t\tgetStatus();\n\n\t}, []);\n\n\tconst connect = async () => {\n\t\tconst s = await API.connect();\n\t\tsetStatus(s.status);\n\t};\n\n\tconst disconnect = async () => {\n\t\tconst s = await API.disconnect();\n\t\tsetStatus(s.status);\n\t};\n\n\tconst getAllVoltages = async () => {\n\t\t//if (status !== 'online') return [0, 0, 0, 0, 0, 0, 0,];\n\t\treturn await API.getAllVoltages();\n\t};\n\n\treturn {isConnected: status === 'online', status, connect, disconnect, getAllVoltages, getVoltage: API.getVoltage};\n\n};\n\nexport default useHardware;\n","import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n\tAvatar,\n\tBox,\n\tCard,\n\tTypography,\n\tmakeStyles,\n\tButton\n} from '@material-ui/core';\nimport {ThumbsUp, ThumbsDown} from 'react-feather';\nimport useHardware from '../../../hooks/useHardware';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tpadding: theme.spacing(3),\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between'\n\t},\n\tlabel: {\n\t\tmarginLeft: theme.spacing(1)\n\t},\n\tavatar: {\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t\tcolor: theme.palette.secondary.contrastText,\n\t\theight: 48,\n\t\twidth: 48\n\t},\n\tbavatar: {\n\t\tbackgroundColor: 'red',\n\t\tcolor: theme.palette.error,\n\t\theight: 48,\n\t\twidth: 48\n\t}\n}));\n\nfunction HardwareStatus({className, ...rest}) {\n\n\tconst classes = useStyles();\n\tconst {isConnected, status, connect, disconnect} = useHardware();\n\n\treturn (\n\t\t<Card\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<Box flexGrow={1}>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent=\"h3\"\n\t\t\t\t\tgutterBottom\n\t\t\t\t\tvariant=\"overline\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t>\n\t\t\t\t\tHardware Status\n\t\t\t\t</Typography>\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tflexWrap=\"wrap\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h3\"\n\t\t\t\t\t\tcolor={isConnected ? 'success' : 'error'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{status.toUpperCase()}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t{isConnected ?\n\t\t\t\t\t\t<Button onClick={() => disconnect()}>Click Here to Disconnect</Button> :\n\t\t\t\t\t\t<Button onClick={() => connect()}>Click Here to Connect to Test Unit</Button>}\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Avatar className={isConnected ? classes.avatar : classes.bavatar}>\n\t\t\t\t{isConnected ? <ThumbsUp/> : <ThumbsDown/>}\n\t\t\t</Avatar>\n\t\t</Card>\n\t);\n}\n\nHardwareStatus.propTypes = {\n\tclassName: PropTypes.string\n};\n\nexport default HardwareStatus;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {Line, Bar, HorizontalBar} from 'react-chartjs-2';\nimport {\n\tfade,\n\tmakeStyles,\n\tuseTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\tposition: 'relative'\n\t}\n}));\n\n\nfunction BarChart({\n\t\t\t\t\t\t\t\t className,\n\t\t\t\t\t\t\t\t data: dataProp,\n\t\t\t\t\t\t\t\t labels,\n\t\t\t\t\t\t\t\t ...rest\n\t\t\t\t\t\t\t }) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst data2 = {\n\t\tlabels: ['V Out', 'Ch 1', 'Ch 2', 'Ch 3',\n\t\t\t'Ch 4', 'Ch 5', 'Ch 6', 'Ch 7'],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tbackgroundColor: 'rgba(98,40,255,0.85)',\n\t\t\t\tborderColor: 'rgb(177,112,255)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp,\n\t\t\t}\n\t\t]\n\t};\n\n\tconst options = {\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\tticks: {\n\t\t\t\t\tmin: -0.5,\n\t\t\t\t\tmax: 5.0,\n\t\t\t\t\tstepSize: 0.25\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false\n\t\t},\n\t};\n\n\tconsole.log('----');\n\tconsole.log(dataProp);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<Bar data={data2} options={options}/>\n\t\t</div>\n\t);\n}\n\nBarChart.propTypes = {\n\tclassName: PropTypes.string,\n\tdata: PropTypes.array.isRequired,\n\tlabels: PropTypes.array.isRequired\n};\n\nexport default BarChart;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {Line, Bar} from 'react-chartjs-2';\nimport {\n\tfade,\n\tmakeStyles,\n\tuseTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\tposition: 'relative'\n\t}\n}));\n\n\nfunction MultiLineChart({\n\t\t\t\t\t\t\t\t className,\n\t\t\t\t\t\t\t\t data: dataProp,\n\t\t\t\t\t\t\t\t labels,\n\t\t\t\t\t\t\t\t ...rest\n\t\t\t\t\t\t\t }) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst v0points = dataProp.map( reading => reading[0]);\n\tconst v1points = dataProp.map( reading => reading[1]);\n\tconst v2points = dataProp.map( reading => reading[2]);\n\n\n\tconst data2 = {\n\t\tlabels: dataProp.map((x, idx) => `${idx}`),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(98,40,255,0.85)',\n\t\t\t\tlabel: 'V Out',\n\t\t\t\tborderColor: 'rgb(255,0,75)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: v0points,\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V1',\n\t\t\t\tborderColor: 'rgb(255,174,44)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: v1points,\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V2',\n\t\t\t\tborderColor: 'rgb(255,247,94)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: v2points,\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V3',\n\t\t\t\tborderColor: 'rgb(121,255,80)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp.map( reading => reading[3]),\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V4',\n\t\t\t\tborderColor: 'rgb(80,180,255)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp.map( reading => reading[4]),\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V5',\n\t\t\t\tborderColor: 'rgb(47,29,255)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp.map( reading => reading[5]),\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V6',\n\t\t\t\tborderColor: 'rgb(190,20,255)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp.map( reading => reading[6]),\n\t\t\t},\n\t\t\t{\n\t\t\t\t//backgroundColor: 'rgba(255,130,125,0.85)',\n\t\t\t\tlabel: 'V7',\n\t\t\t\tborderColor: 'rgb(225,212,255)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgb(121,14,255)',\n\t\t\t\tdata: dataProp.map( reading => reading[7]),\n\t\t\t},\n\t\t]\n\t};\n\n\tconsole.log(data2)\n\n\tconst options = {\n\t\tscales: {\n\t\t\tyAxes: [{\n\t\t\t\tticks: {\n\t\t\t\t\tmin: -0.5,\n\t\t\t\t\tmax: 3.4,\n\t\t\t\t\tstepSize: 0.25\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: true\n\t\t},\n\t};\n\n\tconsole.log('----');\n\tconsole.log(dataProp);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{/*<p>{JSON.stringify(dataProp)}</p>*/}\n\t\t\t{/*<p>Entries {dataProp.length}</p>*/}\n\t\t\t<Line data={data2} options={options}/>\n\t\t</div>\n\t);\n}\n\nMultiLineChart.propTypes = {\n\tclassName: PropTypes.string,\n\tdata: PropTypes.array.isRequired,\n};\n\nexport default MultiLineChart;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport StartIcon from '@material-ui/icons/PlayCircleFilled';\nimport StopIcon from '@material-ui/icons/StopOutlined';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction RTRMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n  const { onChartToggle, chartChoiceLabel, onSave, onStart, onStop, isSampling } = props;\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Save Readings\" onClick={onSave} />\n        </MenuItem>\n        { isSampling ?\n          <MenuItem>\n            <ListItemIcon>\n              <StopIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Stop Sampling\" onClick={onStop}/>\n          </MenuItem>\n\n        : <MenuItem>\n          <ListItemIcon>\n            <StartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Start Sampling\" onClick={onStart}/>\n        </MenuItem> }\n\n        <MenuItem>\n          <ListItemIcon>\n            <ChartIcon />\n          </ListItemIcon>\n          <ListItemText primary={chartChoiceLabel} onClick={onChartToggle} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nRTRMoreButton.propTypes = {\n  className: PropTypes.string,\n  onSave: PropTypes.func,\n  onStop: PropTypes.func,\n  onStart: PropTypes.func,\n  onChartToggle: PropTypes.func,\n  chartChoiceLabel: PropTypes.string,\n  isSampling: PropTypes.bool\n};\n\nRTRMoreButton.defaultProps = {\n  onSave: () => console.log('save'),\n  onStop: () => console.log('stop'),\n  onStart: () => console.log('start'),\n  onChartToggle: () => console.log('toggle'),\n  chartChoiceLabel: 'Change Chart',\n  isSampling: true\n};\n\nexport default memo(RTRMoreButton);\n","import React, { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tlet id = setInterval(tick, delay);\n\t\t\treturn () => clearInterval(id);\n\t\t}\n\t}, [delay]);\n}\n\nexport default useInterval;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Box} from \"@material-ui/core\";\n\nconst DataTable = props => {\n\n\tconst { voltageHistory } = props;\n\n\t\treturn (\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table aria-label=\"voltage table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>V Out</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V1</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V2</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V3</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V4</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V5</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V6</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">V7</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{voltageHistory[0]}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[1]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[2]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[3]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[4]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[5]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[6]}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{voltageHistory[7]}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t);\n}\n\nDataTable.propTypes = {\n\tvoltageHistory: PropTypes.array\n};\n\nexport default DataTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n\tBox,\n\tCard,\n\tCardHeader,\n\tCardContent,\n\tDivider,\n\tmakeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport BarChart from './BarChart';\nimport useHardware from \"../../../../hooks/useHardware\";\nimport MultiLineChart from \"./MultiLineChart\";\nimport RTRMoreButton from \"./RealtimeReadingsMoreButton\";\nimport useInterval from \"../../../../hooks/useInterval\";\nimport Chip from '@material-ui/core/Chip';\nimport fileDownload from \"js-file-download\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DataTable from \"./DataTable\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\t//height: 1500\n\t},\n\tchart: {\n\t\theight: '100%'\n\t}\n}));\n\nfunction RealtimeReadings({className, ...rest}) {\n\tconst classes = useStyles();\n\tconst [voltageLevels, setVoltageLevels] = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n\tconst [v0, setV0] = useState(0);\n\tconst [voltageHistory, setVoltageHistory] = useState([]);\n\tconst [isSampling, setIsSampling] = useState(true);\n\tconst [chartType, setChartType] = useState('line');\n\tconst [delay, setDelay] = useState(5000);\n\n\tconst {getAllVoltages, isConnected} = useHardware();\n\n\tuseInterval(() => {\n\n\t\tif (isSampling) {\n\t\t\tconsole.log('Reading voltages');\n\t\t\tgetAllVoltages()\n\t\t\t\t.then(vs => {\n\t\t\t\t\tsetVoltageLevels(vs);\n\t\t\t\t\tsetV0(vs[0]);\n\t\t\t\t\tsetVoltageHistory([...voltageHistory, vs]);\n\t\t\t\t\tconsole.log(vs);\n\t\t\t\t})\n\t\t\t\t.catch(e => console.error(e.message));\n\t\t}\n\t}, delay);\n\n\tconst handleChartToggle = () => {\n\t\tconsole.log(`Toggling chart from ${chartType}`);\n\t\tif (chartType === 'line') setChartType('bar');\n\t\tif (chartType === 'bar') setChartType('line');\n\t};\n\n\tconst handleSave = () => {\n\t\tfileDownload(JSON.stringify(voltageHistory), 'sample-history.json');\n\t};\n\n\tif (!isConnected) return null;\n\n\treturn (\n\t\t<Card\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<CardHeader\n\t\t\t\taction={<RTRMoreButton\n\t\t\t\t\tonStart={() => setIsSampling(true)}\n\t\t\t\t\tonStop={() => {\n\t\t\t\t\t\tconsole.log('Burp!');\n\t\t\t\t\t\tsetIsSampling(false);\n\t\t\t\t\t}}\n\t\t\t\t\tonChartToggle={handleChartToggle}\n\t\t\t\t\tisSampling={isSampling}\n\t\t\t\t\tonSave={handleSave}\n\t\t\t\t\tchartChoiceLabel={chartType === 'line' ? 'Show bar chart' : 'Show line chart'}/>}\n\t\t\t\ttitle={`Current Voltage Levels [${voltageHistory.length}]`}\n\t\t\t/>\n\t\t\t<Divider/>\n\t\t\t<CardContent>\n\t\t\t\t<PerfectScrollbar>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Chip label={isSampling ? 'Sampling' : 'Not Sampling'} color=\"primary\" style={{marginBottom: '10px'}}/>\n            { voltageHistory.length ? <DataTable voltageHistory={voltageHistory[voltageHistory.length-1].map(v=>v.toFixed(3))}/> : null }\n\t\t\t\t\t\t{chartType === 'line' ? <MultiLineChart data={voltageHistory}/>\n\t\t\t\t\t\t\t: <BarChart\n\t\t\t\t\t\t\t\tclassName={classes.chart}\n\t\t\t\t\t\t\t\tdata={voltageLevels}/>}\n\n\t\t\t\t\t</Box>\n\t\t\t\t</PerfectScrollbar>\n\t\t\t</CardContent>\n\t\t</Card>\n\t);\n}\n\nRealtimeReadings.propTypes = {\n\tclassName: PropTypes.string\n};\n\nexport default RealtimeReadings;\n","import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n\tAvatar,\n\tBox,\n\tCard,\n\tTypography,\n\tmakeStyles,\n\tButton,\n\tSlider\n} from '@material-ui/core';\nimport {BatteryCharging} from 'react-feather';\nimport useHardware from '../../../../hooks/useHardware';\nimport api from '../../../../services/restApiService';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tpadding: theme.spacing(3),\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between'\n\t},\n\tlabel: {\n\t\tmarginLeft: theme.spacing(1)\n\t},\n\tavatar: {\n\t\tbackgroundColor: 'orange',\n\t\tcolor: theme.palette.primary.contrastText,\n\t\theight: 48,\n\t\twidth: 48\n\t},\n\tbavatar: {\n\t\tbackgroundColor: 'red',\n\t\tcolor: theme.palette.error,\n\t\theight: 48,\n\t\twidth: 48\n\t}\n}));\n\nfunction VoltageControl({className, ...rest}) {\n\n\tconst classes = useStyles();\n\tconst {getVoltage, isConnected} = useHardware();\n\tconst [v0, setV0] = useState(0);\n\n\t// useEffect(()=> {\n\t// \tgetV0();\n\t// \tconst i = setInterval(getV0, 1000);\n\t// \treturn () => { clearInterval(i)};\n\t// }, []);\n\t//\n\t// const getV0 = async () => {\n\t// \tconst v = await getVoltage(0);\n\t// \tsetV0(v.voltage);\n\t// };\n\n\tconst handleSetVoltage = async (ev,volts) => {\n\t\tconst res = await api.setVoltage({voltage: volts, channel: 0, tolerance: 0.001});\n\t\tconsole.log(res);\n\t};\n\n\treturn (\n\t\t<Card\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<Box flexGrow={1}>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent=\"h3\"\n\t\t\t\t\tgutterBottom\n\t\t\t\t\tvariant=\"overline\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t>\n\t\t\t\t\tVoltage Control\n\t\t\t\t</Typography>\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tflexWrap=\"wrap\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h3\"\n\t\t\t\t\t\tcolor={'success'}\n\t\t\t\t\t>\n\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tdefaultValue={0.1}\n\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\tmarks\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={3.3}\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\tonChangeCommitted={handleSetVoltage}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t<BatteryCharging/>\n\t\t\t</Avatar>\n\t\t</Card>\n\t);\n}\n\nVoltageControl.propTypes = {\n\tclassName: PropTypes.string\n};\n\nexport default VoltageControl;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport LatestProjects from './LatestProjects';\nimport NewProjects from './NewProjects';\nimport PerformanceOverTime from './PerformanceOverTime';\nimport RealTime from './RealTime';\nimport RoiPerCustomer from './RoiPerCustomer';\nimport SystemHealth from './SystemHealth';\nimport TeamTasks from './TeamTasks';\nimport TodaysMoney from './TodaysMoney';\nimport {SHOW_TEST_BORDERS} from \"../../../config\";\nimport HardwareStatus from \"./HardwareStatus\";\nimport RealtimeReadings from \"./RealtimeReadings\";\nimport VoltageControl from \"./VoltageControl/VoltageControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    border: SHOW_TEST_BORDERS ? '1px dashed red' : undefined\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction DashboardView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xs={12}\n          >\n            <HardwareStatus />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <VoltageControl/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            xs={12}\n          >\n          </Grid>\n          <Grid\n            item\n            lg={9}\n            xs={12}\n          >\n            <RealtimeReadings />\n          </Grid>\n          <Grid\n            item\n            lg={5}\n            xl={4}\n            xs={12}\n          >\n          </Grid>\n          <Grid\n            item\n            lg={7}\n            xl={8}\n            xs={12}\n          >\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardView;\n"],"sourceRoot":""}